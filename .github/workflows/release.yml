name: Build and Release

on:
  release:
    types: prereleased
  workflow_dispatch:

jobs:
  release-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - arch: x64
            target: x86_64-unknown-linux-gnu
          - arch: x86
            target: i686-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++-multilib g++-mingw-w64-x86-64
          rustup target add ${{ matrix.platform.target }}
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ktr
          shared-key: ubuntu-latest
      - name: Build for Linux
        run: |
          cargo build --target=${{ matrix.platform.target }} --release
      - name: Release Linux builds
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/release/ktr
          draft: true

  release-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - arch: x64
            target: x86_64-apple-darwin
          - arch: x64
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ktr
          shared-key: macos-latest
      - name: Build for Mac
        run: |
          cargo build --target ${{ matrix.platform.target }} --release
      - name: Release Mac builds
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/release/ktr
          draft: true

  release-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - arch: x64
            target: x86_64-pc-windows-msvc
          - arch: x86
            target: i686-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ktr
          shared-key: windows-latest
      - name: Build for Windows
        run: |
          cargo build --target ${{ matrix.platform.target }} --release
      - name: Release Windows builds
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target\${{ matrix.platform.target }}\release\ktr.exe
          draft: true
