name: Build and Release

on:
  release:
    types: prereleased
  workflow_dispatch:

jobs:
  release-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - arch: x64
            target: x86_64-unknown-linux-gnu
          - arch: x86
            target: i686-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++-multilib g++-mingw-w64-x86-64
          rustup target add ${{ matrix.platform.target }}
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ktr
          shared-key: ubuntu-latest
      - name: Build for Linux
        run: |
          cargo build --target=${{ matrix.platform.target }} --release
      - name: Upload Linux build
        uses: actions/upload-artifact@v3
        with:
          name: ktr-${{ matrix.platform.target }}
          path: target/${{ matrix.platform.target }}/release/ktr
          if-no-files-found: error

  release-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - arch: x64
            target: x86_64-apple-darwin
          - arch: x64
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          default: true
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ktr
          shared-key: macos-latest
      - name: Build for Mac
        run: |
          cargo build --target ${{ matrix.platform.target }} --release
      - name: Upload Mac builds
        uses: actions/upload-artifact@v3
        with:
          name: ktr-${{ matrix.platform.target }}
          path: target/${{ matrix.platform.target }}/release/ktr
          if-no-files-found: error

  release-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - arch: x64
            target: x86_64-pc-windows-msvc
          - arch: x86
            target: i686-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          default: true
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ktr
          shared-key: windows-latest
      - name: Build for Windows
        run: |
          cargo build --target ${{ matrix.platform.target }} --release
      - name: Upload Windows builds
        uses: actions/upload-artifact@v3
        with:
          name: ktr-${{ matrix.platform.target }}.exe
          path: target\${{ matrix.platform.target }}\release\ktr.exe
          if-no-files-found: error

  release-all:
    name: Release all artifacts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        - filename: x86_64-unknown-linux-gnu
        - filename: i686-unknown-linux-gnu
        - filename: x86_64-apple-darwin
        - filename: aarch64-apple-darwin
        - filename: x86_64-pc-windows-msvc.exe
        - filename: i686-pc-windows-msvc.exe
    needs: [ release-macos, release-linux, release-windows ]
    steps:
      - run: mkdir -p releases
      - uses: actions/download-artifact@master
        with:
          name: ktr-${{ matrix.filename }}
          path: releases
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/ktr-x86_64-unknown-linux-gnu
            releases/ktr-i686-unknown-linux-gnu
            releases/ktr-x86_64-apple-darwin
            releases/ktr-aarch64-apple-darwin
            releases/ktr-x86_64-pc-windows-msvc.exe
            releases/ktr-i686-pc-windows-msvc.exe
          draft: true
